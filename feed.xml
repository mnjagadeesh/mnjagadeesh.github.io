<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jagadeesh N Malakannavar</title>
    <description>DevOps, GitOps, Software, Armature Radio, Reiki and Cycling</description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 21 Feb 2019 21:25:19 +0530</pubDate>
    <lastBuildDate>Thu, 21 Feb 2019 21:25:19 +0530</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Start-BitsTransfer: Tool that downloads very quickly!!</title>
        <description>&lt;p&gt;I was working on a puppet module that downloads a file of size over 3GB, unzips
it and update database.Puppet master setup is on CentOS 6.8 and agent running on
Windows 2012R2. I used nginx to serve files. As usual, I used puppet protocol to
download file.&lt;/p&gt;

&lt;p&gt;This setup was working as expected. The whole process use to complet in about
50 minutes.&lt;/p&gt;

&lt;p&gt;After few days, I received a file size of 5GB. For this size, may times, puppet
was failing to download it. I started evaluating best available tools.  First in
the list was powershell’s curl. Curl was better but not quite satisfactory.
While looking for some of the better utilities, I stumbled upon MicroSoft’s new
utility called ‘Start-BitsTransfer’.
Its syntax is very simple and easy to use.
Syntax:&lt;/p&gt;

&lt;p&gt;D:&amp;gt; Start-BitsTransfer -Source “http://server.localtion/file.txt” \
-Destination “D:\install_folder\file.txt”&lt;/p&gt;

&lt;p&gt;With Start-BitsTransfer download time has come down to 4 minutes. I am now using
Start-BitsTransfer extensively to improve download times. Well Done Microsoft.&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Apr 2018 06:04:00 +0530</pubDate>
        <link>http://localhost:4000//2018/startbitstransfer/</link>
        <guid isPermaLink="true">http://localhost:4000//2018/startbitstransfer/</guid>
        
        <category>devops</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>Deployment Automation</title>
        <description>&lt;p&gt;Couple months back I was asked to look into deployment process of a software
developed using zope, the open source web framework for python. Deployment of
this product is a quite complex process. The complete installation of this
product on 6 servers takes about 5 days. It has 34 components to deploy.&lt;/p&gt;

&lt;p&gt;Product is deployed using puppet master and puppet agent setup.&lt;/p&gt;

&lt;p&gt;The puppet master runs on CentOS 6.8. This server has 8 cores and 8G memory.
Puppet agent nodes run Windows 2012 R2. Deployment process involves setting up
puppet master, puppet agents, prepare configuration files, extracting artifacts.
Then log on to each windows machine to run start deploy each component.&lt;/p&gt;

&lt;p&gt;This process is fine if there are 5 to 6 servers. But it will not scale up and
becomes laborious work as number of servers increase. Growing business needs
more efficient, robust and scalable product deployment solution.&lt;/p&gt;

&lt;p&gt;Another challenge is to reduce deployment time and make it easy to deploy.&lt;/p&gt;

&lt;p&gt;I started analyzing each process to understand pain area. I quickly learnt that
activities like setting up puppet master, puppet agents, prepare configuration
files, extract artifacts are all manual processes. After puppet infrastructure
setup, deployment engineer manually logs on to each server using tool like
remote desktop to setup puppet agents.&lt;/p&gt;

&lt;p&gt;First , I decided to automate the manual processes. But I was told not to
introduce any new technology and tools unless absolutely necessary. Since it is
a python shop, I have chosen python for scripting, Jenkins for deployment
automation and nginx is used as local package server.&lt;/p&gt;

&lt;p&gt;I chose Jenkins to run slaves on each puppet agent node. Also I automated
installation and setup puppet master and nginx. Jenkins job will pull the nginx,
puppet master software and install them.&lt;/p&gt;

&lt;p&gt;But setting up puppet agent and remote execution, I have to install jenkins on
each windows server. Admin has to log on to each windows server at least once to
setup jenkins slaves. To avoid this I chose to use winrm. Configuration is
simple and done remotely. Pywinrm helped remote login to windows. This allowed
me to download puppet agent software to each windows server, install them and
handshake with puppet master remotely. Puppet agent setup and configuration also
programmed to run in parallel. Python multiprocessing module was used to achieve
this. This save good amount of time and effort. This whole activity was talking
about 6 to 8 hours for an expert deployment engineer. Setting up of puppet agent
on 6 servers has been reduced now to 3 mins.&lt;/p&gt;

&lt;p&gt;For puppet master, yaml is used for configuration. Editing yaml was another area
of concern. Only experienced deployment engineer used to edit those huge
configuration files. I decided to generate these configuration file using
spreadsheet, so that editing is simple and syntax can be verified as they are
generated.&lt;/p&gt;

&lt;p&gt;Now a job need to simplify yaml and puppet config generation. I captured
information like servers and component mapping in a spreadsheet to generate yaml
and puppet config needed for puppet. Thus editing spreadsheet is made easy and
this spreadsheet is read using xlrd module. This job will now generate yaml and
puppet config file in about few minutes.&lt;/p&gt;

&lt;p&gt;Now I had to extract artifacts. In the manual process, artifact was extracted
just before starting deployment. With concurrent process, this process is
reduced to 10 minutes to extract all 34 components.&lt;/p&gt;

&lt;p&gt;I grouped independent components and dependent and sub dependent components. I
installed all independent components in parallel and then dependent components
and worked on this order of installation and generated groups.&lt;/p&gt;

&lt;p&gt;At this time everything is setup to start installing product components using
pywinrm.&lt;/p&gt;

&lt;p&gt;Jenkins job started, all processes spawned, logged onto windows as expected.
Almost in first two minutes seen component started getting deployed. For my
great surprise, all components deployed and application has come up in about 5
hours.&lt;/p&gt;

&lt;p&gt;I did many testing, everything is working as expected and installation time is
reduced by about 90%. This whole process is greatly simplified. Now anyone can
edit spreadsheet to change configurations and install product.&lt;/p&gt;

&lt;p&gt;With this I will have to look for optimization now. I will have to optimize
database setup, zope setup.&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Apr 2018 06:04:23 +0530</pubDate>
        <link>http://localhost:4000//2018/deployment/</link>
        <guid isPermaLink="true">http://localhost:4000//2018/deployment/</guid>
        
        <category>devops</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>V Dipole Antenna</title>
        <description>&lt;p&gt;Here is my V Dipole antenna for weather.&lt;/p&gt;

&lt;p&gt;Pic: &lt;img src=&quot;/images/IMG_20170421_114027.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Feb 2018 20:05:00 +0530</pubDate>
        <link>http://localhost:4000//2018/vdipole/</link>
        <guid isPermaLink="true">http://localhost:4000//2018/vdipole/</guid>
        
        <category>hamradio</category>
        
        
        <category>hamradio</category>
        
      </item>
    
      <item>
        <title>Morse Code Song</title>
        <description>&lt;p&gt;Here is an interesting song that helps learning morse code:
&lt;a href=&quot;https://www.youtube.com/watch?v=Q19_CIDycWg&quot;&gt;Morse Code Song&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I could able to remember about 7 letters during my first watch. :-)
Hope it will help you learning morse code.&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Feb 2018 19:05:00 +0530</pubDate>
        <link>http://localhost:4000//2018/morsesong/</link>
        <guid isPermaLink="true">http://localhost:4000//2018/morsesong/</guid>
        
        <category>hamradio</category>
        
        
        <category>hamradio</category>
        
      </item>
    
      <item>
        <title>Build a product with git Hook !!</title>
        <description>&lt;p&gt;I noticed that few products have very complex building system. Even experienced
engineers spend good amount of time understanding the build system. Based on
complexity of the build system, it may take few weeks to be productive. It might
take months in some cases. Initial experience will not be smooth for them.&lt;/p&gt;

&lt;p&gt;On the other hand, resources are needed to create and maintaining document about
building product. It involves cost and effort.&lt;/p&gt;

&lt;p&gt;Build team finds difficulty updating a system, making any modification, adding
any new features. Because it involves, sometime extensive, training and
documentation.&lt;/p&gt;

&lt;p&gt;I was thinking to find an alternative, effective way. My initial idea was to
choose popular tool that is almost known to everyone. Just to avoid additional
effort of training.&lt;/p&gt;

&lt;p&gt;My obvious first choice was to make use of Jenkins. But Jenkins needs JRE and a
network port to run. Again, not sure if everyone can use Jenkins. I have seen
few folks who are reluctant to use it.&lt;/p&gt;

&lt;p&gt;During this time, I was fine-tuning git hooks. I personally use hooks for mutt,
emacs, version control systems. I got an idea if git post-checkout hook can be
used for to build the product. Idea is automating all tedious manual steps.&lt;/p&gt;

&lt;p&gt;To experiment this idea I chose a small project built using
[buildout][http://docs.buildout.org/]. It is a just simple CRUD application
built using python and zope and MSSQL as backend database.&lt;/p&gt;

&lt;p&gt;This application is little complex to set up. It makes use of various third party
components like RabbitMQ, Memcache and many other python modules. The buildout
configuration is slightly complex and takes about 50 minutes to complete build.
Configuration involves setting network port, database info and many other
values. Different version of product branch use different database version. One
has to obtain this information from DB team.&lt;/p&gt;

&lt;p&gt;First step is automated manual steps with a python script in post-checkout,
updated ~/.gitconfig to make hooks to reflect new hook on next clone. Cloned
repo of product. After successful Cloning, defaulted branch was checkedout. At
this point automagically, post-commit hook started executing. It did update
buildout configuration, executed buildout successfully. Product installation is
successful, I could see login page.&lt;/p&gt;

&lt;p&gt;Since all steps were executed in machine time, complete build took considerably
less time.&lt;/p&gt;

&lt;p&gt;Next step is start considering different use cases.&lt;/p&gt;

&lt;p&gt;For a new engineer, it takes good amount of time to collect required information
needed to update build configuration.&lt;/p&gt;

&lt;p&gt;I have created separate branch specific configuration files so that it is easy
make available up-to-date and accurate configuration. These configuration files
will be maintained by build team.&lt;/p&gt;

&lt;p&gt;If system breaks during setup then either user has to investigate and fix issue
or wait till expert comes for rescue. I noticed that many times it takes too
long to understand root cause of the issue. Much time is spent collecting logs
and additional data about build break.&lt;/p&gt;

&lt;p&gt;This use case is handled by adding additional logging in a file. Build engineer
can inspect this file to understand what went wrong.&lt;/p&gt;

&lt;p&gt;This also address issue of announcements and educating users. Apart from general
usage, developers can consult manual pages for certain flags. This reduces lot
of ping-pong used to happen.&lt;/p&gt;

&lt;p&gt;Then to make it more effective, added few auto healing techniques. So that, known
issues used to be fixed automatically. If new issue is encountered, ticket will
be filed appropriately with adequate log. Fix for this new ticket is made as
known solution for auto healing.&lt;/p&gt;

&lt;p&gt;After few days, keeping hooks up-to-date was a challenge. Then I moved heavy
lifting part of installer to a separate script to root folder. Now, Git post
commit hook invokes this script. This set up is going well for now.&lt;/p&gt;

&lt;p&gt;Most of the engineers are familiar with git and its configuration.&lt;/p&gt;

&lt;p&gt;I found it simple and effective solution to solve a challenge. It is just an
attempt to make happy starting for new engineers with decreased churn.&lt;/p&gt;

&lt;p&gt;If you get any questions, clarifications please leave a comment. I will reply.&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jul 2016 14:20:00 +0530</pubDate>
        <link>http://localhost:4000//2016/postcommithook/</link>
        <guid isPermaLink="true">http://localhost:4000//2016/postcommithook/</guid>
        
        <category>gitops</category>
        
        
        <category>gitops</category>
        
      </item>
    
      <item>
        <title>Why we are still known as VUs?</title>
        <description>&lt;p&gt;I was searching for origin of VU, a prefix used for Indian hams, I stumbled upon&lt;/p&gt;

&lt;p&gt;https://en.wikipedia.org/wiki/Amateur_radio_in_India&lt;/p&gt;

&lt;p&gt;It says VU is “Indian amateur radio operators are allotted only the VU call-sign
prefix. The V or Viceroy, series prefix was allotted to British colonies.”&lt;/p&gt;

&lt;p&gt;Some senior ham was telling me it was for Viceroy’s Unit.&lt;/p&gt;

&lt;p&gt;Now we are close to celebrating 70th year of Independence of India, why still we
be known as VUs? Can’t that be changed? What is there to be proud of?&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jul 2016 14:20:00 +0530</pubDate>
        <link>http://localhost:4000//2016/vu/</link>
        <guid isPermaLink="true">http://localhost:4000//2016/vu/</guid>
        
        <category>hamradio</category>
        
        
        <category>hamradio</category>
        
      </item>
    
      <item>
        <title>New experiment with Reiki.</title>
        <description>&lt;p&gt;This is my very recent experiment that I wanted to share with you all. Last
Sunday about 10 cyclists had trip to Turahalli forest. Ride started from
Nagarabhavi. We started around 6:00 AM and back to home by 9:30 AM.&lt;/p&gt;

&lt;p&gt;I returned home, I was too tired. Had to lot of weekend work to finish. Thought
of postponing all of them but I could not. Then just a thought came to my mind
to use reiki to recharge myself. I was excited to see effect.&lt;/p&gt;

&lt;p&gt;I gave a reiki to myself for about 45 mins. Result was amazing. I was totally
refreshed and turbo charged.&lt;/p&gt;

&lt;p&gt;Just sharing this incident if anyone else had this kind experience too OR
willing to have it.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Jul 2016 01:15:00 +0530</pubDate>
        <link>http://localhost:4000//2016/reikiexp/</link>
        <guid isPermaLink="true">http://localhost:4000//2016/reikiexp/</guid>
        
        <category>reiki</category>
        
        
        <category>reiki</category>
        
      </item>
    
      <item>
        <title>My Bicycle Journey!</title>
        <description>&lt;p&gt;I had a great dream to cycle everyday to work which was about 50 kms
round trip. I bought Cannondale Trail 6 bicycle in 2012.&lt;/p&gt;

&lt;p&gt;But soon I realized that taking cycle on Bangalore road to work is not a
fun but quite risky. This was proved couple times when I was riding bike
on ring road. Quite a bad experience clubbed with unwillingness.&lt;/p&gt;

&lt;p&gt;Then started using car again. Continued with car till 2015. My bicycle
was just lying in garage. It accumulated lot of dust.&lt;/p&gt;

&lt;p&gt;Last november I decided to pay attention to my health and decided to use cycle
for fitness. As I live very near to Bangalore University, I thought of riding
bicycle one hour whenever it is possible. This plan worked well and I started of
getting lot of interest in Cycling. On 26th January 2016 Republic day of India,
I thought of taking cycle to work once in a week at least one way. Next day
morning I took my cycle to work. I carried fully charged cellphone, wouxun radio
for communication. I added all ID cards to wallet too. Thinking if something
goes wrong then someone can inform family.&lt;/p&gt;

&lt;p&gt;To my surprise, ride was so well and it has become one of the life time finest
memory for me.I just told about my new adventure in office, my colleagues were
impressed too. Many did not believe till I show my cycle in the parking area.
Many colleagues were asking me how I could do it. People know me closely were
just stunned how could a guy who always drove a premium car with AC on all time
with quite loud music, travelled 25 km on shiny sunlight that too in peak hour
traffic?&lt;/p&gt;

&lt;p&gt;And is continued about a week. After a week of cycling, I announced that if I
could cycle for 21 days without a break I would gift new bicycle myself.&lt;/p&gt;

&lt;p&gt;To my surprise I magically reached 21 days goal and I just walked in to “Livenup
Concepts” bicycle showroom. Met Makarand, store owner, now very good friend of
mine. I told him about this change in me. He initially could not believe it but
looking at my small weight loss, just he looked agreed.&lt;/p&gt;

&lt;p&gt;Then I told that I need a new MTB. He suggested to go with Montra and bought new
one. Now I am using Montra for all travelling need.&lt;/p&gt;

&lt;p&gt;So far I have travelled 1400 km.&lt;/p&gt;

&lt;p&gt;It is about three months now and gifting myself new hybrid bike. Going to buy
Schiwnn Searcher 3(2016). And a change I am planing is to use MTB and hybrid
bike on alternate days [OR even-odd formula?]. Will post about it.&lt;/p&gt;

&lt;p&gt;For my Montra high end cycle I attached APRS so that dear ones can see me
travelling. I have b’twin count 4 computer attached to check speed and distance
I travel. Sometimes I use “sport tracker” android application to record speed,
distance and calorie burnt. I am busy building “intelligent indicators” which I
will write in detail later.&lt;/p&gt;

&lt;p&gt;This write up will be incomplete if I do not mention my health benefit. Now I do
not suffer with neck pain and back pain. I am getting very good sleep for about
5 hours. Which was hardly couple hours. Cycling also reduces anxiety. Big gain
is I lost about 3 kgs weight.&lt;/p&gt;

&lt;p&gt;I will keep telling you my cycle story.&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Apr 2016 15:04:23 +0530</pubDate>
        <link>http://localhost:4000//2016/cyclejourney/</link>
        <guid isPermaLink="true">http://localhost:4000//2016/cyclejourney/</guid>
        
        <category>bicycle</category>
        
        
        <category>bicycle</category>
        
      </item>
    
      <item>
        <title>About Me!</title>
        <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;My name is Jagadeesh Malakannavar.&lt;/p&gt;

&lt;p&gt;Highly proficient professional software engineer with proven software skills and
abilities, as well as 16+ years of experience of overseas project which includes
developing software for Business Intelligence, Code Compliance DevOps, GitOps,
Engineering Infrastructure, Advanced Network Monitoring, Advanced Book
Publishing, and Advanced Financial Tools. Well-rounded creative technical
problem solver, extremely quick learner, innovative, self-motivated, trainer,
team builder and technical leader with solid software skills.&lt;/p&gt;

&lt;p&gt;I specialize in DevOps, GitOps, Automation and System integration. I offer my services
to businesses of all size to scale up business by crafting creative solutions.
Email me to see how I can be helpful to you.&lt;/p&gt;

&lt;p&gt;I do Tecktalks. I love conducting technical workshops.&lt;/p&gt;

&lt;p&gt;I live in Bangalore, India. I am a digital nomad.&lt;/p&gt;

</description>
        <pubDate>Fri, 08 Jan 2016 15:04:23 +0530</pubDate>
        <link>http://localhost:4000//2016/aboutme/</link>
        <guid isPermaLink="true">http://localhost:4000//2016/aboutme/</guid>
        
        <category>personal</category>
        
        
        <category>personal</category>
        
      </item>
    
  </channel>
</rss>
